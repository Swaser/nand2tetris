function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 1
push constant 16383
push static 1
sub
push static 0
push static 1
add
pop pointer 1
pop that 0
push constant 1
neg
push static 0
push static 1
push constant 1
add
add
pop pointer 1
pop that 0
push constant 1
neg
pop static 2
push constant 0
return
function Memory.peek 0
push static 0
push argument 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 1
push static 0
push argument 0
add
pop pointer 1
pop that 0
push constant 0
return
function Memory.alloc 6
push argument 0
push constant 2
add
pop argument 0
push static 1
pop local 0
push constant 1
neg
pop local 1
label Memory.alloc$0
push local 0
push constant 1
neg
eq
not
not
if-goto Memory.alloc.skipShortCircuit$2
push static 0
push local 0
add
pop pointer 1
push that 0
push argument 0
lt
goto Memory.alloc.endShortCircuit$3
label Memory.alloc.skipShortCircuit$2
push constant 0
label Memory.alloc.endShortCircuit$3
not
if-goto Memory.alloc$1
push local 0
pop local 1
push static 0
push local 0
push constant 1
add
add
pop pointer 1
push that 0
pop local 0
goto Memory.alloc$0
label Memory.alloc$1
push local 0
push argument 0
add
pop local 4
push local 0
push constant 1
add
pop local 5
push static 0
push local 0
add
pop pointer 1
push that 0
push argument 0
sub
push static 0
push local 4
add
pop pointer 1
pop that 0
push static 0
push local 5
add
pop pointer 1
push that 0
push static 0
push local 4
push constant 1
add
add
pop pointer 1
pop that 0
push local 1
push constant 1
neg
eq
not
if-goto Memory.alloc$4
push local 4
pop static 1
goto Memory.alloc$5
label Memory.alloc$4
push local 4
push static 0
push local 1
push constant 1
add
add
pop pointer 1
pop that 0
label Memory.alloc$5
push argument 0
push static 0
push local 0
add
pop pointer 1
pop that 0
push static 2
push static 0
push local 5
add
pop pointer 1
pop that 0
push local 0
pop static 2
push local 0
push constant 2
add
return
function Memory.deAlloc 3
push argument 0
push constant 2
sub
pop local 0
push static 2
pop local 1
push constant 1
neg
pop local 2
label Memory.deAlloc$0
push local 1
push constant 1
neg
eq
not
not
if-goto Memory.deAlloc.skipShortCircuit$2
push local 1
push local 0
eq
not
goto Memory.deAlloc.endShortCircuit$3
label Memory.deAlloc.skipShortCircuit$2
push constant 0
label Memory.deAlloc.endShortCircuit$3
not
if-goto Memory.deAlloc$1
push local 1
pop local 2
push static 0
push local 1
push constant 1
add
add
pop pointer 1
push that 0
pop local 1
goto Memory.deAlloc$0
label Memory.deAlloc$1
push local 1
push constant 1
neg
eq
not
if-goto Memory.deAlloc$4
push constant 0
return
label Memory.deAlloc$4
push local 2
push constant 1
neg
eq
not
if-goto Memory.deAlloc$6
push static 0
push local 0
push constant 1
add
add
pop pointer 1
push that 0
pop static 2
goto Memory.deAlloc$7
label Memory.deAlloc$6
push static 0
push local 0
push constant 1
add
add
pop pointer 1
push that 0
push static 0
push local 2
push constant 1
add
add
pop pointer 1
pop that 0
label Memory.deAlloc$7
push static 1
pop local 1
push constant 1
neg
pop local 2
label Memory.deAlloc$8
push local 1
push constant 1
neg
eq
not
not
if-goto Memory.deAlloc.skipShortCircuit$10
push local 1
push local 0
lt
goto Memory.deAlloc.endShortCircuit$11
label Memory.deAlloc.skipShortCircuit$10
push constant 0
label Memory.deAlloc.endShortCircuit$11
not
if-goto Memory.deAlloc$9
push local 1
pop local 2
push static 0
push local 1
push constant 1
add
add
pop pointer 1
push that 0
pop local 1
goto Memory.deAlloc$8
label Memory.deAlloc$9
push local 2
push constant 1
neg
eq
not
if-goto Memory.deAlloc$12
push local 0
pop static 1
goto Memory.deAlloc$13
label Memory.deAlloc$12
push local 0
push static 0
push local 2
push constant 1
add
add
pop pointer 1
pop that 0
label Memory.deAlloc$13
push local 1
push static 0
push local 0
push constant 1
add
add
pop pointer 1
pop that 0
push local 0
push static 0
push local 0
add
pop pointer 1
push that 0
add
push local 1
eq
not
if-goto Memory.deAlloc$14
push static 0
push local 0
add
pop pointer 1
push that 0
push static 0
push local 1
add
pop pointer 1
push that 0
add
push static 0
push local 0
add
pop pointer 1
pop that 0
push static 0
push local 1
push constant 1
add
add
pop pointer 1
push that 0
push static 0
push local 0
push constant 1
add
add
pop pointer 1
pop that 0
label Memory.deAlloc$14
push local 2
push constant 1
neg
eq
not
not
if-goto Memory.deAlloc.skipShortCircuit$18
push local 2
push static 0
push local 2
add
pop pointer 1
push that 0
add
push local 0
eq
goto Memory.deAlloc.endShortCircuit$19
label Memory.deAlloc.skipShortCircuit$18
push constant 0
label Memory.deAlloc.endShortCircuit$19
not
if-goto Memory.deAlloc$16
push static 0
push local 2
add
pop pointer 1
push that 0
push static 0
push local 0
add
pop pointer 1
push that 0
add
push static 0
push local 2
add
pop pointer 1
pop that 0
push static 0
push local 0
push constant 1
add
add
pop pointer 1
push that 0
push static 0
push local 2
push constant 1
add
add
pop pointer 1
pop that 0
label Memory.deAlloc$16
push constant 0
return
